CREATE TABLE IF NOT EXISTS "person" (
	"personId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"lastName" TEXT,
	"firstName" TEXT,
	"dateOfBirth" DATE,
	"genderId" INTEGER,
	PRIMARY KEY("personId")
);




CREATE TABLE IF NOT EXISTS "genders" (
	"genderId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("genderId")
);




CREATE TABLE IF NOT EXISTS "personToAddress" (
	"personId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"addressId" INTEGER NOT NULL,
	PRIMARY KEY("personId", "addressId")
);




CREATE TABLE IF NOT EXISTS "addresses" (
	"addressId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"zipCode" BIGINT,
	"city" TEXT,
	"street" TEXT,
	"number" TEXT,
	"coverName" TEXT,
	"federalStateID" INTEGER,
	PRIMARY KEY("addressId")
);




CREATE TABLE IF NOT EXISTS "federalStates" (
	"federalStateId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("federalStateId")
);




CREATE TABLE IF NOT EXISTS "contactInfoToPerson" (
	"personId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"contactInfoId" INTEGER NOT NULL,
	PRIMARY KEY("personId", "contactInfoId")
);




CREATE TABLE IF NOT EXISTS "contactInfo" (
	"contactInfoId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"info" TEXT NOT NULL,
	"contactInfoTypeId" INTEGER NOT NULL,
	PRIMARY KEY("contactInfoId")
);




CREATE TABLE IF NOT EXISTS "contactInfoTypes" (
	"contactInfoTypeId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("contactInfoTypeId")
);




CREATE TABLE IF NOT EXISTS "presences" (
	"personId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"dayId" INTEGER NOT NULL,
	PRIMARY KEY("personId", "dayId")
);




CREATE TABLE IF NOT EXISTS "days" (
	"dayId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"date" DATE NOT NULL,
	PRIMARY KEY("dayId")
);




CREATE TABLE IF NOT EXISTS "participants" (
	"participantId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"personId" INTEGER NOT NULL,
	"discountCodeId" INTEGER NOT NULL,
	"shirtSizeId" INTEGER NOT NULL,
	"registrationDate" TIMESTAMP NOT NULL DEFAULT NOW(),
	"confirmationDate" TIMESTAMP,
	"reminderDate" TIMESTAMP,
	"cancelationDate" TIMESTAMP,
	"picturesAllowed" BOOLEAN NOT NULL,
	PRIMARY KEY("participantId")
);




CREATE TABLE IF NOT EXISTS "permissionToParticipant" (
	"participantId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"permissionId" INTEGER NOT NULL,
	PRIMARY KEY("participantId", "permissionId")
);




CREATE TABLE IF NOT EXISTS "permissions" (
	"permissionId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("permissionId")
);




CREATE TABLE IF NOT EXISTS "discountCodes" (
	"discountCodeId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("discountCodeId")
);




CREATE TABLE IF NOT EXISTS "shirtSizes" (
	"shirtSizeId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("shirtSizeId")
);




CREATE TABLE IF NOT EXISTS "participantsPrivate" (
	"participantId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"nutritionId" INTEGER NOT NULL,
	"schoolTypeId" INTEGER NOT NULL,
	"nationalityId" INTEGER NOT NULL,
	"insuredBy" TEXT,
	"specialInfos" TEXT,
	"isHealthy" BOOLEAN,
	"medication" TEXT,
	"hasLiabilityInsurance" BOOLEAN,
	PRIMARY KEY("participantId")
);




CREATE TABLE IF NOT EXISTS "nutritions" (
	"nutritionId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("nutritionId")
);




CREATE TABLE IF NOT EXISTS "nationalitys" (
	"nationalityId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("nationalityId")
);




CREATE TABLE IF NOT EXISTS "schoolTypes" (
	"schoolTypeId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" TEXT NOT NULL,
	PRIMARY KEY("schoolTypeId")
);




CREATE TABLE IF NOT EXISTS "staff" (
	"staffId" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"personId" INTEGER NOT NULL,
	"password" TEXT,
	"userName" TEXT,
	PRIMARY KEY("staffId")
);



ALTER TABLE "person"
ADD FOREIGN KEY("genderId") REFERENCES "genders"("genderId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "personToAddress"
ADD FOREIGN KEY("personId") REFERENCES "person"("personId")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "personToAddress"
ADD FOREIGN KEY("addressId") REFERENCES "addresses"("addressId")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "addresses"
ADD FOREIGN KEY("federalStateID") REFERENCES "federalStates"("federalStateId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "contactInfoToPerson"
ADD FOREIGN KEY("contactInfoId") REFERENCES "contactInfo"("contactInfoId")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "contactInfoToPerson"
ADD FOREIGN KEY("personId") REFERENCES "person"("personId")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "contactInfo"
ADD FOREIGN KEY("contactInfoTypeId") REFERENCES "contactInfoTypes"("contactInfoTypeId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "presences"
ADD FOREIGN KEY("dayId") REFERENCES "days"("dayId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "presences"
ADD FOREIGN KEY("personId") REFERENCES "person"("personId")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "participants"
ADD FOREIGN KEY("personId") REFERENCES "person"("personId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "permissionToParticipant"
ADD FOREIGN KEY("participantId") REFERENCES "participants"("participantId")
ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "permissionToParticipant"
ADD FOREIGN KEY("permissionId") REFERENCES "permissions"("permissionId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "participants"
ADD FOREIGN KEY("discountCodeId") REFERENCES "discountCodes"("discountCodeId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "participants"
ADD FOREIGN KEY("shirtSizeId") REFERENCES "shirtSizes"("shirtSizeId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "participantsPrivate"
ADD FOREIGN KEY("participantId") REFERENCES "participants"("participantId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "participantsPrivate"
ADD FOREIGN KEY("nutritionId") REFERENCES "nutritions"("nutritionId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "participantsPrivate"
ADD FOREIGN KEY("schoolTypeId") REFERENCES "schoolTypes"("schoolTypeId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "participantsPrivate"
ADD FOREIGN KEY("nationalityId") REFERENCES "nationalitys"("nationalityId")
ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE "staff"
ADD FOREIGN KEY("personId") REFERENCES "person"("personId")
ON UPDATE CASCADE ON DELETE RESTRICT;